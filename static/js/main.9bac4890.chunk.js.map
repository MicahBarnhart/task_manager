{"version":3,"sources":["modules/subModules/pageModules/Footer.js","modules/subModules/pageModules/Header.js","modules/subModules/taskModules/TaskItem.js","modules/subModules/taskModules/Task.js","modules/subModules/pageModules/Body.js","modules/subModules/pageModules/Page.js","modules/App.js","index.js"],"names":["Footer","props","state","date","Date","getFullYear","name","className","this","React","Component","Header","TaskItem","itemName","item","timeElapsed","totalTime","startTime","interval","timerToggle","TimerButtonClick","bind","LogTimeDifference","id","onClick","now","setState","setMilliseconds","setInterval","document","getElementById","innerHTML","total","Math","floor","clearInterval","hours","remainder","timeSpent","Task","taskList","items","map","Body","taskText","tasks","taskTextBoxHandler","handleAddTask","onChange","type","e","target","value","t","push","console","log","Page","App","ReactDOM","render"],"mappings":"gNAoBeA,E,YAhBX,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTC,MAAM,IAAIC,MAAOC,cACjBC,KAAML,EAAMK,MAJF,E,sEAQd,OACI,yBAAKC,UAAU,UACX,kCAAUC,KAAKN,MAAMC,KAArB,IAA4BK,KAAKN,MAAMI,W,GAXlCG,IAAMC,WCQZC,E,iLAPP,OACI,6BACI,8C,GAJKF,IAAMC,W,OCsEZE,E,YArEX,WAAYX,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAO,CACRW,SAAUZ,EAAMa,KAChBC,YAAa,EACbC,UAAW,OACXC,UAAW,KACXC,SAAU,KACVC,YAAa,eAEjB,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBAXX,E,sEAcd,OACI,6BACI,2BAAOd,UAAU,oBAAoBC,KAAKN,MAAMW,UAChD,4BAAQU,GAAG,cAAchB,UAAU,mBAC/BiB,QAAShB,KAAKY,kBADlB,eAIA,2BAAOb,UAAU,oBAAjB,aAA+CC,KAAKN,MAAMiB,aAC1D,2BAAOZ,UAAU,oBAAoBC,KAAKN,MAAMc,c,wFAQxD,GAA+B,gBAA3BR,KAAKN,MAAMiB,YAA8B,CACzC,GAA4B,MAAxBX,KAAKN,MAAMe,UAAkB,CAC7B,IAAIQ,EAAM,IAAIrB,KACdI,KAAKkB,SAAS,CAACT,UAAWQ,QAG1B,CACA,IAAIA,GAAM,IAAIrB,MAAOuB,gBAA0C,KAAzBnB,KAAKN,MAAMa,aACjDP,KAAKkB,SAAS,CAACT,UAAWQ,IAK9BjB,KAAKkB,SAAS,CAACR,SAAUU,YAAYpB,KAAKc,kBAAmB,KAAOH,YAAa,YACjFU,SAASC,eAAe,eAAeC,UAAY,iBAEnD,CACA,IAAIN,EAAM,IAAIrB,KACV4B,EAAQC,KAAKC,OAAOT,EAAMjB,KAAKN,MAAMe,WAAa,KAEtDT,KAAKkB,SAAS,CAACX,YAAaiB,EAAOb,YAAa,gBAChDgB,cAAc3B,KAAKN,MAAMgB,UACzBW,SAASC,eAAe,eAAeC,UAAY,iB,0CAKvD,IAAIN,EAAM,IAAIrB,KAASI,KAAKN,MAAMe,UAClCQ,EAAMQ,KAAKC,MAAMT,EAAK,KAEtB,IAAIW,EAAQH,KAAKC,MAAMT,EAAM,MACzBY,EAAYJ,KAAKC,MAAMT,EAAM,MAI7Ba,EAAY,UAAYF,EAAQ,aAHtBH,KAAKC,MAAMG,EAAY,IAGwB,aAF/CJ,KAAKC,MAAMG,EAAY,IAGrC7B,KAAKkB,SAAS,CAACV,UAAWsB,Q,GAnEX7B,IAAMC,WCed6B,E,iLAbP,IAAMC,EAAWhC,KAAKP,MAAMuC,SACxBC,EAAQ,mBAOZ,OANgB,MAAZD,GAAmC,MAAfA,EAAS,KAC7BC,EAAQD,EAASE,KAAI,SAAC5B,GAAD,OACrB,4BAAI,kBAAC,EAAD,CAAUA,KAAMA,SAKpB,4BAAK2B,O,GAXEhC,IAAMC,WC2CViC,E,YA1CX,WAAY1C,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAO,CACR0C,SAAU,KACVC,MAAO,IAEX,EAAKC,mBAAqB,EAAKA,mBAAmBzB,KAAxB,gBAC1B,EAAK0B,cAAgB,EAAKA,cAAc1B,KAAnB,gBAPP,E,sEAUd,OACI,yBAAKd,UAAU,aACX,kBAAC,EAAD,CAAMiC,SAAUhC,KAAKN,MAAM2C,QAC3B,2BAAOtC,UAAU,oBAAjB,SACA,2BACIA,UAAU,mBACVD,KAAK,cACL0C,SAAUxC,KAAKsC,qBAEnB,4BACIvC,UAAU,mBACV0C,KAAK,SACLzB,QAAShB,KAAKuC,eAHlB,e,yCAUOG,GACf1C,KAAKkB,SAAS,CAACkB,SAAUM,EAAEC,OAAOC,U,sCAGlC,IAAIC,EAAI7C,KAAKN,MAAM2C,MACQ,MAAvBrC,KAAKN,MAAM0C,UAA4C,KAAxBpC,KAAKN,MAAM0C,WAC1CS,EAAEC,KAAK9C,KAAKN,MAAM0C,UAClBpC,KAAKkB,SAAS,CAACmB,MAAOQ,KAE1BE,QAAQC,IAAIhD,KAAKN,MAAM2C,W,GAvCZpC,IAAMC,WCeV+C,E,iLAVP,OACI,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQnD,KAAK,wB,GANNG,IAAMC,WCSVgD,G,uLATP,OACI,6BACI,kBAAC,EAAD,W,GAJEjD,IAAMC,YCCxBiD,IAASC,OACT,kBAAC,EAAD,MACA/B,SAASC,eAAe,U","file":"static/js/main.9bac4890.chunk.js","sourcesContent":["// Footer Component\r\nimport React from 'react';\r\n\r\nclass Footer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            date: new Date().getFullYear(),\r\n            name: props.name\r\n        };\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"footer\">\r\n                <p>&copy;{this.state.date} {this.state.name}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                <h1>Task List</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\n\r\nclass TaskItem extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            itemName: props.item,\r\n            timeElapsed: 0,\r\n            totalTime: \"0:00\",\r\n            startTime: null,\r\n            interval: null,\r\n            timerToggle: \"Not Running\"\r\n        };\r\n        this.TimerButtonClick = this.TimerButtonClick.bind(this);\r\n        this.LogTimeDifference = this.LogTimeDifference.bind(this);\r\n    }\r\n    render(){\r\n        return(\r\n            <div >\r\n                <label className=\"taskAdderSpacing\">{this.state.itemName}</label>\r\n                <button id=\"timerButton\" className=\"taskAdderSpacing\"\r\n                    onClick={this.TimerButtonClick}>\r\n                    Start Timer\r\n                </button>\r\n                <label className=\"taskAdderSpacing\">Timer is: {this.state.timerToggle}</label>\r\n                <label className=\"taskAdderSpacing\">{this.state.totalTime}</label>\r\n            </div>\r\n        );\r\n    }\r\n    onComponentDidMount(){\r\n\r\n    }\r\n    TimerButtonClick(){\r\n        if (this.state.timerToggle === \"Not Running\"){\r\n            if (this.state.startTime == null){\r\n                let now = new Date();\r\n                this.setState({startTime: now})\r\n                //console.log(\"Start time: \" + now / 1000);\r\n            }\r\n            else{\r\n                let now = new Date().setMilliseconds(-this.state.timeElapsed * 1000);\r\n                this.setState({startTime: now});\r\n                //console.log(\"Start time now: \" + now / 1000);\r\n            }\r\n            //console.log(\"Total time when started: \" + this.state.startTime);\r\n            //console.log(\"start time:\" + this.state.startTime);\r\n            this.setState({interval: setInterval(this.LogTimeDifference, 1000), timerToggle: \"Running\"});\r\n            document.getElementById(\"timerButton\").innerHTML = \"Stop Timer\";\r\n        }\r\n        else{\r\n            let now = new Date();\r\n            let total = Math.floor((now - this.state.startTime) / 1000);\r\n            //console.log(\"Total time when stopped: \" + total);\r\n            this.setState({timeElapsed: total, timerToggle: \"Not Running\"});\r\n            clearInterval(this.state.interval);\r\n            document.getElementById(\"timerButton\").innerHTML = \"Start Timer\";\r\n        }\r\n        \r\n    }\r\n    LogTimeDifference(){\r\n        let now = new Date() - this.state.startTime;\r\n        now = Math.floor(now /1000);\r\n        //console.log(\"Time Passed:\" + now);\r\n        let hours = Math.floor(now / 3600);\r\n        let remainder = Math.floor(now % 3600);\r\n        let minutes = Math.floor(remainder / 60);\r\n        let seconds = Math.floor(remainder % 60);\r\n\r\n        let timeSpent = \"Hours: \" + hours + \" Minutes: \" + minutes + \" Seconds: \" + seconds;\r\n        this.setState({totalTime: timeSpent});\r\n    }\r\n}\r\nexport default TaskItem;","import React from 'react';\r\nimport TaskItem from './TaskItem';\r\nclass Task extends React.Component{\r\n    render() {\r\n        const taskList = this.props.taskList;\r\n        let items = \"No current tasks\";\r\n        if (taskList != null && taskList[0] != null){\r\n            items = taskList.map((item) =>\r\n            <li><TaskItem item={item}/></li>\r\n            );\r\n        }\r\n        \r\n        return(\r\n            <ul>{items}</ul>\r\n        );\r\n    }\r\n}\r\nexport default Task;","import React from 'react';\r\nimport Task from '../taskModules/Task';\r\nclass Body extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            taskText: null,\r\n            tasks: []\r\n        };\r\n        this.taskTextBoxHandler = this.taskTextBoxHandler.bind(this);\r\n        this.handleAddTask = this.handleAddTask.bind(this);\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"taskAdder\">\r\n                <Task taskList={this.state.tasks}/>\r\n                <label className=\"taskAdderSpacing\">Task:</label>\r\n                <input \r\n                    className=\"taskAdderSpacing\"\r\n                    name=\"taskTextBox\"\r\n                    onChange={this.taskTextBoxHandler}   \r\n                 />\r\n                <button \r\n                    className=\"taskAdderSpacing\"\r\n                    type=\"button\"\r\n                    onClick={this.handleAddTask}\r\n                >\r\n                Add Task\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n    taskTextBoxHandler(e){\r\n        this.setState({taskText: e.target.value});\r\n    }\r\n    handleAddTask(){\r\n        let t = this.state.tasks;\r\n        if (this.state.taskText != null || this.state.taskText !== \"\"){\r\n            t.push(this.state.taskText);\r\n            this.setState({tasks: t});\r\n        }\r\n        console.log(this.state.tasks);\r\n    }\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\nimport Body from './Body';\r\n\r\nclass Page extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n            <Header />\r\n            <Body/>\r\n            <Footer name=\"Micah Barnhart\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Page;","import React from 'react';\r\nimport Page from \"./subModules/pageModules/Page\";\r\nimport \"../css/index.css\";\r\nclass App extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Page/>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","// Start the app by rendering the <App /> Element\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './modules/App';\r\nReactDOM.render(\r\n<App />,\r\ndocument.getElementById('root')\r\n);"],"sourceRoot":""}